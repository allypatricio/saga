
 <div class="filter-bar">
    <div class="location-search">
      <label for="location">Location</label>
       <input id="location" type="text" name="location" placeholder="Lisbon"><br>
    </div>

    <div class="filter-box-element">
    <%= form_tag tours_path, method: :get, remote: true do %>
    <input type="hidden" id="searchquery" name="search" value=<%= params[:search] %>>
      <label for="category">Category</label>
      <select id="category" name="category" placeholder="Category" class="input-box no-margin" onchange="updateCategoryInput();">
        <option></option>
        <% Tour::CATEGORIES.each do |category| %>
        <option><%= category %></option>
        <% end %>
      </select>
    </div>

    <div class="duration-search" >
      <label for="duration" id="textDuration" >Duration: <%= @max_duration %>h</label>
      <input id="duration" name="duration" type="range" min="0" max="<%= @max_duration %>" value="<%= @max_duration %>" onchange="updateDurationInput(this.value);" >
    </div>

    <div class="price-search">
      <label for="price" id="textPrice" >Price: <%= @max_price %>€</label>
      <input id="price" name="price" type="range" min="0" max= "<%= @max_price %>"value = "<%= @max_price %>" onchange="updatePriceInput(this.value);" >
    </div>
      <div class="filter-button-element" style="margin-bottom: 10px">
        <input type="submit" value="Apply filters" class="btn-filter-pnk" id="apply-button">
        <button type="button" class="btn-filter-pnk" onClick="window.location.reload();">Reset filters</button>
      </div>

    <%end%>
</div>


  <div class="flex-container">
    <div class="map-container" id="map-id">
      <%= render 'map' %>
    </div>

    <div class="card-wrapper">
      <div class="row" id="cardsgrid">
        <%= render 'cardsgrid' %>
      </div>
    </div>
  </div>


<% content_for :external_script do  %>
  <script>
    function updatePriceInput(val) {
          document.getElementById('textPrice').innerHTML='Price: '+val+'€';
          document.getElementById("apply-button").click();

        }
    function updateDurationInput(val) {
          document.getElementById('textDuration').innerHTML='Duration: '+val+'h';
          document.getElementById("apply-button").click();
        }
    function updateCategoryInput() {
          document.getElementById("apply-button").click();
        }

    var cards = document.getElementsByClassName("card");

    function markBlue(i) {
        map.markers[i].setIcon({
             url: 'https://raw.githubusercontent.com/Concept211/Google-Maps-Markers/master/images/marker_blue.png'
        })
      }

    function markRed(i) {
        map.markers[i].setIcon({
          url: 'https://raw.githubusercontent.com/Concept211/Google-Maps-Markers/master/images/marker_red.png'
        })
      }

    Array.from(cards).forEach(function(card, index) {
      card.addEventListener("mouseover", function() {
        markBlue(index);
      });
    });

    Array.from(cards).forEach(function(card, index) {
      card.addEventListener("mouseout", function() {
        markRed(index);
      });
    });

  </script>
<% end %>

